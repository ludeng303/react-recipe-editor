{"version":3,"sources":["Counter.js","CounterHooks.js","App.js","index.js"],"names":["Counter","props","state","count","initialCount","console","log","ThemeContext","Consumer","style","onClick","changeCount","amount","this","setState","precState","Component","CounterHooks","useState","setCount","useContext","prevCount","React","createContext","App","theme","setTheme","Provider","value","backgroundColor","preTheme","ReactDOM","render","document","getElementById"],"mappings":"kQAGqBA,E,YACrB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAEDC,MAAQ,CACTC,MAAOF,EAAMG,cAJH,E,sEAOJ,IAAD,OAEL,OADAC,QAAQC,IAAI,kBAER,kBAACC,EAAaC,SAAd,MACK,SAAAC,GAAK,OACH,6BACA,4BAAQA,MAAOA,EAAOC,QAAS,kBAAM,EAAKC,aAAa,KAAvD,KACA,8BAAO,EAAKT,MAAMC,OAClB,4BAAQM,MAAOA,EAAOC,QAAS,kBAAM,EAAKC,YAAY,KAAtD,W,kCAOHC,GACRC,KAAKC,UAAS,SAAAC,GACV,MAAQ,CAAEZ,MAAOY,EAAUZ,MAAQS,U,GAzBVI,aCAtB,SAASC,EAAT,GAAyC,IAAjBb,EAAgB,EAAhBA,aACnCC,QAAQC,IAAI,wBADuC,MAEzBY,mBAASd,GAFgB,mBAE5CD,EAF4C,KAErCgB,EAFqC,KAG7CV,EAASW,qBAAWb,GAC1B,OACI,6BACI,4BAAQE,MAAOA,EAAOC,QAAS,kBAAMS,GAAS,SAAAE,GAAS,OAAIA,EAAY,OAAvE,KACA,8BAAOlB,GACP,4BAAQM,MAAOA,EAAOC,QAAS,kBAAMS,GAAS,SAAAE,GAAS,OAAIA,EAAY,OAAvE,MCNL,IAAMd,EAAee,IAAMC,gBAkBnBC,MAhBf,WACEnB,QAAQC,IAAI,cADC,MAEaY,mBAAS,OAFtB,mBAENO,EAFM,KAECC,EAFD,KAGb,OACE,kBAACnB,EAAaoB,SAAd,CAAuBC,MAAO,CAAEC,gBAAiBJ,IAAjD,UAEE,kBAAC,EAAD,CAASrB,aAAgB,IAF3B,gBAIE,kBAACa,EAAD,CAAcb,aAAgB,IAC9B,4BAAQM,QAAS,kBAAOgB,GAAS,SAAAI,GAC/B,MAAoB,QAAbA,EAAqB,OAAS,WADvC,kB,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c5aff569.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { ThemeContext } from './App'\r\n\r\nexport default class Counter extends Component {\r\nconstructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n        count: props.initialCount\r\n    }\r\n}\r\n    render() {\r\n        console.log(\"Render Counter\")\r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {style => (\r\n                   <div>\r\n                   <button style={style} onClick={() => this.changeCount(-1)}>-</button>\r\n                   <span>{this.state.count}</span>\r\n                   <button style={style} onClick={() => this.changeCount(1)}>+</button>\r\n               </div>\r\n            )}\r\n            </ThemeContext.Consumer>\r\n        )\r\n    }\r\n\r\n    changeCount(amount){\r\n        this.setState(precState => {\r\n            return  { count: precState.count + amount }\r\n        })\r\n    }\r\n}","import React, { useState, useContext } from 'react'\r\nimport { ThemeContext } from './App'\r\n\r\nexport default function CounterHooks({ initialCount }) {\r\n    console.log(\"Render Counter Hooks\")\r\n    const [count, setCount] = useState(initialCount)  \r\n    const style =  useContext(ThemeContext)\r\n    return (\r\n        <div>\r\n            <button style={style} onClick={() => setCount(prevCount => prevCount - 1)}>-</button>\r\n            <span>{count}</span>\r\n            <button style={style} onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Counter from \"./Counter\"\nimport CounterHooks from \"./CounterHooks\"\n\nexport const ThemeContext = React.createContext()\n\nfunction App() {\n  console.log(\"Render app\")\n  const [theme, setTheme] = useState('red')\n  return (\n    <ThemeContext.Provider value={{ backgroundColor: theme }}>\n      Counter\n      <Counter initialCount = {0}/>\n      Counter Hooks\n      <CounterHooks initialCount = {0} />\n      <button onClick={( ) => setTheme(preTheme => {\n        return preTheme === 'red' ? 'blue' : 'red'\n      })}>Toggle Theme</button>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}